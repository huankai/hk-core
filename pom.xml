<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.hk</groupId>
    <artifactId>hk-core</artifactId>
    <version>2.1.3.RELEASE</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.hk</groupId>
                <artifactId>hk-core-spring-boot-dependencies</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>hk-core-utils</module>
        <module>hk-core-validator</module>
        <module>hk-core-poi</module>
        <module>hk-core-httpclient</module>
        <module>hk-core-page</module>
        <module>hk-core-data-commons</module>
        <module>hk-core-web</module>
        <module>hk-core-data-jdbc</module>
        <module>hk-core-data-jpa</module>
        <module>hk-core-data-mybatis</module>
        <module>hk-core-data-solr</module>
        <module>hk-core-data-elasticsearch</module>
        <module>hk-core-authentication-api</module>
        <module>hk-core-authentication-security</module>
        <module>hk-core-authentication-security-cas</module>
        <module>hk-core-authentication-shiro</module>
        <module>hk-core-authentication-weixin-mp</module>
        <module>hk-core-authentication-alipay</module>
        <module>hk-core-authentication-security-oauth2</module>
        <module>hk-core-service</module>
        <module>hk-core-cache</module>
        <module>hk-core-redis</module>
        <module>hk-core-i18n</module>
        <module>hk-core-message-api</module>
        <module>hk-core-message-websocket</module>
        <module>hk-core-message-weixin</module>
        <module>hk-core-message-redis</module>
        <module>hk-core-stream-rabbitmq</module>
        <module>hk-core-stream-kafka</module>
        <module>hk-swagger-ui</module>
        <module>hk-core-test</module>
        <module>hk-core-spring-boot-autoconfigure</module>
        <module>hk-core-spring-boot-dependencies</module>
    </modules>

    <!--发布到 nexus 地址-->
    <distributionManagement>
        <repository>
            <id>nexus</id>
            <name>Releases</name>
            <url>http://182.61.40.18:8081/repository/maven-releases</url>
        </repository>
        <snapshotRepository>
            <id>nexus</id>
            <name>Snapshot</name>
            <url>http://182.61.40.18:8081/repository/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <!-- 注意体会插件配置的顺序，这正体现了一个maven的运行流程 -->
        <plugins>
            <!-- Maven Clean Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <skip>false</skip> <!-- 忽略clean [mvn clean -Dmaven.clean.skip=true] -->
                    <failOnError>false</failOnError> <!-- clean时忽略错误 [mvn clean -Dmaven.clean.failOnError=false] -->
                </configuration>
                <executions>
                    <execution>
                        <id>auto-clean</id>
                        <phase>clean</phase> <!-- clean生命周期clean阶段 -->
                        <goals>
                            <goal>clean</goal> <!-- 执行clean插件的clean目标 -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- compiler插件, 设定JDK版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>${java.version}</source> <!-- 源代码使用的jdk版本 -->
                    <target>${java.version}</target> <!-- 构建后生成class文件jdk版本 -->
                    <encoding>${project.build.sourceEncoding}</encoding> <!-- 构建使用的编码 -->
                </configuration>
            </plugin>

            <!-- 运行Maven 单元测试 -->
            <!--
            <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.20.1</version>
                </plugin>
             -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>

        </plugins>
    </build>

    <!-- kafka 的包需要使用spring 仓库下载 

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/libs-milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    -->
</project>